<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on STOR-i Blog</title>
    <link>https://mikeom.github.io/categories/programming/</link>
    <description>Recent content in Programming on STOR-i Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 18 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mikeom.github.io/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Wait... random isn&#39;t random</title>
      <link>https://mikeom.github.io/blog/2018-04-18-wait...-random-isnt-random/</link>
      <pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mikeom.github.io/blog/2018-04-18-wait...-random-isnt-random/</guid>
      <description>Here’s a nice little mind blower: it’s actually incredibly hard to find and measure something that is truly random. This is actually a bit of a problem as there’s so many places where random numbers are needed. In this blog post I’ll use a few running examples where random number generation is needed:
The gambling sector, pretty much everywhere from shuffling cards in online poker (and in casinos for the particularly high tech ones) to slot machines for obvious reasons.</description>
    </item>
    
    <item>
      <title>Object Orientated Programming in R</title>
      <link>https://mikeom.github.io/blog/2018-03-20-object-orientated-programming-in-r/</link>
      <pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mikeom.github.io/blog/2018-03-20-object-orientated-programming-in-r/</guid>
      <description>Sadly this is another post aimed at R users. Recently I’ve been looking into how to make my programming cleaner, one of the main ways of doing this is a method called Object Orientated Programming. It’s used by most of the functions in R for example look at the output from a linear model.
#Fit linear model lm_cars &amp;lt;- lm(mpg~.,data=mtcars) is.object(lm_cars) ## [1] TRUE isS4(lm_cars) ## [1] FALSE class(lm_cars) ## [1] &amp;quot;lm&amp;quot; So the first check in the example above checks if lm.</description>
    </item>
    
    <item>
      <title>Blogging with blogdown</title>
      <link>https://mikeom.github.io/blog/2018-02-11-blogging-with-blogdown/</link>
      <pubDate>Sun, 11 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mikeom.github.io/blog/2018-02-11-blogging-with-blogdown/</guid>
      <description>So, I’ve upgraded from the old and outdated ad-riddled wordpress, up to a nice hugo website generated by blogdown, an R package developed by Yihui Xie. You can have a look at my old wordpress here. In my opinion the new blog is a huge improvement and much more efficient too. Here I’ll give some basics on how to get started on making a similar one.
So why did I update?</description>
    </item>
    
  </channel>
</rss>